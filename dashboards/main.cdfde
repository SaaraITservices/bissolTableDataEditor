{
 "layout": {
  "title": "main",
  "rows": [
   {
    "id": "b8c2f192-39d5-4010-c630-7a0cc9cebb15",
    "type": "LayoutResourceCode",
    "typeDesc": "Resource",
    "parent": "UnIqEiD",
    "properties": [
     {
      "name": "name",
      "value": "tableeditorcss",
      "type": "Id"
     },
     {
      "name": "resourceType",
      "value": "Css",
      "type": "Label"
     },
     {
      "name": "resourceCode",
      "value": ".add-row{\n    margin-right:2px;\n    margin-left:2px;\n}\n\n.remove-row{\n    margin-right:2px;\n    margin-left:2px;\n}\n\n.save-row{\n    margin-right:2px;\n    margin-left:2px;\n} ",
      "type": "Resource"
     }
    ]
   },
   {
    "id": "6338438b-4055-060a-21ba-5f2976f0bb78",
    "type": "LayoutResourceCode",
    "typeDesc": "Resource",
    "parent": "UnIqEiD",
    "properties": [
     {
      "name": "name",
      "value": "tableeditorjs",
      "type": "Id"
     },
     {
      "name": "resourceType",
      "value": "Javascript",
      "type": "Label"
     },
     {
      "name": "resourceCode",
      "value": "function buildTable(data,metadata) {\n    \n    // get data\n    var myMetadata = metadata;\n    var myData = data;\n    \n    // prepare table basic structure\n    $('#tableeditor').append('<table class=\"table table-striped\"><thead><tr></tr></thead><tbody></tbody></table>');\n\n    // add table header cells\n    $.each(myMetadata, function( i, val ){\n            $('#tableeditor > table > thead > tr').append('<th>' + val.colName + '</th>');\n    });\n\n    // add table body\n    $.each(myData, function( i, val ){\n\n        // add row\n        $('#tableeditor > table > tbody').append('<tr></tr>');\n        \n        $.each(myData[i], function( j, value ){\n        \n            // add cells within row       \n            $('#tableeditor > table > tbody > tr:last')\n            .append('<td><span contenteditable data-name=\"' + myMetadata[j].colName + '\">' \n            + value + '</span></td>');       \n        \n        });\n    });\n    \n    // icons\n    var removeIcon = '<span class=\"glyphicon glyphicon-minus-sign remove-row\"></span>';\n    var addIcon = '<span class=\"glyphicon glyphicon-plus-sign add-row\"></span>';\n    var saveIcon = '<span class=\"glyphicon glyphicon-floppy-disk save-row\"></span>'\n    \n    // add remove and save icon\n    $('#tableeditor > table > thead > tr > th:first').before('<th></th>');\n    $('#tableeditor > table > tbody > tr').find('td:first').before('<td>' + removeIcon + saveIcon + '</td>');\n    \n    // add code for new data entry\n    $('#tableeditor > table > tbody').append('<tr></tr>');\n    \n    $.each(myMetadata, function( i, val ){\n            $('#tableeditor > table > tbody > tr:last').append('<td><span contenteditable></span></td>');\n    });\n    \n    // add add icon\n    $('#tableeditor > table > tbody > tr:last > td:first').before('<td>' + addIcon + saveIcon + '</td>');\n    \n    // add event listeners\n    $('.add-row').on('click', function() {\n        console.log('Here goes something that adds a row');        \n\t});\n    \n    $('.remove-row').on('click', function() { \n        //[OPEN]: make data-name id dynamic\n        console.log($(this).parent().parent().find('span[data-name=\"id\"]').text());\n    });\n    \n    $('.save-row').on('click', function() { \n        \n        var valueArray = [];\n        \n        var spanArray = $(this).parent().parent().find('span:not(.add-row):not(.save-row):not(.remove-row)');\n        \n        $.each(spanArray, function(i, val){\n            valueArray.push($.text(this));\n        });\n        \n        console.log('Values to be saved are :' + valueArray);\n    }); \n    \n\n}\n\n\nfunction saveCellData(){\n    //alert(this.getAttribute('alt') + \": \" + this.textContent);\n    \n    // pass values to CDF parameter\n    \n    var myMessengerBox = JSON.parse(this.getAttribute('alt'));\n    //alert(JSON.stringify(myMessengerBox));\n    //alert(myMessengerBox[0].keyValue);\n    //var param_value = this.textContent; \n    //PARAM_KEY_VALUE = myMessengerBox[0].keyValue;\n    //PARAM_KEY = myMessengerBox[0].key;\n    //Dashboards.fireChange('PARAM_VALUE', param_value);\n\n    // [OPEN] CAST NUMBERS AND STRING VALUES RESPECTIVELY -- currently only String values allowed\n\n    var updateQuery = \"UPDATE employees SET \" + myMessengerBox[0].column + \" = '\" + this.textContent \n         + \"' WHERE \" + myMessengerBox[0].key + \" = \" + myMessengerBox[0].keyValue;\n\n    param_db_connection = 'psqllocaltest'; // [OPEN] Make dynamic\n    \n    Dashboards.log(param_db_connection + ' :: Update Query: ' + updateQuery);\n    console.log(param_db_connection + ' :: Update Query: ' + updateQuery);\n    \n    Dashboards.fireChange('param_sql_update', updateQuery);\n    \n    // [OPEN] Add logic that value is only saved back if it is different from the previous value\n}\n\n\n// call main function and create event listeners\n\nfunction establishListeners(){\n    var myCells = document.getElementsByTagName('span'); // [OPEN] get table id first and then choose span\n\n    for(z = 0;  z < myCells.length; z++) {\n        currentCell = myCells.item(z);\n        //currentCell.addEventListener('blur',saveCellData(this.textContent),false);\n        currentCell.addEventListener('blur', saveCellData ,false);\n    }\n\n}\n\n\n\n\n ",
      "type": "Resource"
     }
    ]
   },
   {
    "id": "a41c34f3-a2d5-d478-f6de-575b9b5021ab",
    "type": "LayoutRow",
    "typeDesc": "Row",
    "parent": "UnIqEiD",
    "properties": [
     {
      "name": "name",
      "value": "",
      "type": "Id"
     },
     {
      "name": "height",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "backgroundColor",
      "value": "",
      "type": "Color"
     },
     {
      "name": "roundCorners",
      "value": "",
      "type": "RoundCorners"
     },
     {
      "name": "textAlign",
      "value": "",
      "type": "TextAlign"
     },
     {
      "name": "cssClass",
      "value": "",
      "type": "String"
     }
    ]
   },
   {
    "id": "bb23d3ba-03a7-ee50-7d54-0b46d2780a9c",
    "type": "LayoutColumn",
    "typeDesc": "Column",
    "parent": "a41c34f3-a2d5-d478-f6de-575b9b5021ab",
    "properties": [
     {
      "name": "name",
      "value": "tableeditor",
      "type": "Id"
     },
     {
      "name": "columnSpan",
      "value": "12",
      "type": "Integer"
     },
     {
      "name": "columnPrepend",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "columnAppend",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "columnPrependTop",
      "value": "false",
      "type": "Boolean"
     },
     {
      "name": "columnAppendBottom",
      "value": "false",
      "type": "Boolean"
     },
     {
      "name": "columnBorder",
      "value": "false",
      "type": "Boolean"
     },
     {
      "name": "columnBigBorder",
      "value": "false",
      "type": "Boolean"
     },
     {
      "name": "height",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "backgroundColor",
      "value": "",
      "type": "Color"
     },
     {
      "name": "roundCorners",
      "value": "",
      "type": "RoundCorners"
     },
     {
      "name": "textAlign",
      "value": "",
      "type": "TextAlign"
     },
     {
      "name": "cssClass",
      "value": "",
      "type": "String"
     }
    ]
   }
  ]
 },
 "components": {
  "rows": [
   {
    "id": "GENERIC",
    "name": "Generic",
    "type": "Label",
    "typeDesc": "<i>Group</i>",
    "parent": "UnIqEiD",
    "properties": [
     {
      "name": "Group",
      "value": "Generic",
      "type": "Label"
     }
    ]
   },
   {
    "id": "5deee05c-a10c-981a-04c1-7e8a399d82c5",
    "type": "ComponentsParameter",
    "typeDesc": "Simple parameter",
    "parent": "GENERIC",
    "properties": [
     {
      "name": "name",
      "value": "param_sql_select",
      "type": "Id"
     },
     {
      "name": "propertyValue",
      "value": "",
      "type": "String"
     },
     {
      "name": "parameterViewRole",
      "value": "unused",
      "type": "parameterViewRoleCustom"
     },
     {
      "name": "bookmarkable",
      "value": "false",
      "type": "Boolean"
     }
    ]
   },
   {
    "id": "03da0f38-4d4b-1aa9-0e96-28456936e2b0",
    "type": "ComponentsParameter",
    "typeDesc": "Simple parameter",
    "parent": "GENERIC",
    "properties": [
     {
      "name": "name",
      "value": "param_db_connection",
      "type": "Id"
     },
     {
      "name": "propertyValue",
      "value": "",
      "type": "String"
     },
     {
      "name": "parameterViewRole",
      "value": "unused",
      "type": "parameterViewRoleCustom"
     },
     {
      "name": "bookmarkable",
      "value": "false",
      "type": "Boolean"
     }
    ]
   },
   {
    "id": "d2805cfd-a18e-b2bb-c2e6-d4fb8672ca94",
    "type": "ComponentsParameter",
    "typeDesc": "Simple parameter",
    "parent": "GENERIC",
    "properties": [
     {
      "name": "name",
      "value": "param_sql_update",
      "type": "Id"
     },
     {
      "name": "propertyValue",
      "value": "",
      "type": "String"
     },
     {
      "name": "parameterViewRole",
      "value": "unused",
      "type": "parameterViewRoleCustom"
     },
     {
      "name": "bookmarkable",
      "value": "false",
      "type": "Boolean"
     }
    ]
   },
   {
    "id": "OTHERCOMPONENTS",
    "name": "Others",
    "type": "Label",
    "typeDesc": "<i>Group</i>",
    "parent": "UnIqEiD",
    "properties": [
     {
      "name": "Group",
      "value": "Others",
      "type": "Label"
     }
    ]
   },
   {
    "id": "5e6cf1e5-4518-198a-068e-e4ed7aa01674",
    "type": "ComponentsQuery",
    "typeDesc": "Query Component",
    "parent": "OTHERCOMPONENTS",
    "properties": [
     {
      "name": "name",
      "value": "comp_generic_select",
      "type": "Id"
     },
     {
      "name": "listeners",
      "value": "['${p:param_sql_select}']",
      "type": "Listeners"
     },
     {
      "name": "parameters",
      "value": "[[\"param_db_connection\",\"param_db_connection\"],[\"param_sql_select\",\"param_sql_select\"]]",
      "type": "ValuesArray"
     },
     {
      "name": "resultvar",
      "value": "select_result",
      "type": "Result"
     },
     {
      "name": "dataSource",
      "value": "qry_generic_select",
      "type": "Datasource"
     },
     {
      "name": "refreshPeriod",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "priority",
      "value": 5,
      "type": "Integer"
     },
     {
      "name": "htmlObject",
      "value": "tableeditor",
      "type": "HtmlObject"
     },
     {
      "name": "executeAtStart",
      "value": "true",
      "type": "Boolean"
     },
     {
      "name": "preExecution",
      "value": "function(){    \n    var selectQuery = \"SELECT * FROM employees\";\n    param_db_connection = \"psqllocaltest\"; //[OPEN] Make dynamic\n    Dashboards.fireChange('param_sql_select', selectQuery);\n}",
      "type": "JavaScript"
     },
     {
      "name": "postExecution",
      "value": "function(){\n    buildTable(select_result,this.metadata);\n    //establishListeners();\n}",
      "type": "JavaScript"
     },
     {
      "name": "postFetch",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "preChange",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "postChange",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "tooltip",
      "value": "",
      "type": "Html"
     }
    ]
   },
   {
    "id": "9a3c2e32-89f3-b6f4-24ea-15ad3bd89ae3",
    "type": "ComponentsQuery",
    "typeDesc": "Query Component",
    "parent": "OTHERCOMPONENTS",
    "properties": [
     {
      "name": "name",
      "value": "comp_generic_update",
      "type": "Id"
     },
     {
      "name": "listeners",
      "value": "['${p:param_sql_update}']",
      "type": "Listeners"
     },
     {
      "name": "parameters",
      "value": "[[\"param_sql_update\",\"param_sql_update\"],[\"param_db_connection\",\"param_db_connection\"]]",
      "type": "ValuesArray"
     },
     {
      "name": "resultvar",
      "value": "",
      "type": "Result"
     },
     {
      "name": "dataSource",
      "value": "qry_generic_update",
      "type": "Datasource"
     },
     {
      "name": "refreshPeriod",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "priority",
      "value": 5,
      "type": "Integer"
     },
     {
      "name": "htmlObject",
      "value": "",
      "type": "HtmlObject"
     },
     {
      "name": "executeAtStart",
      "value": "true",
      "type": "Boolean"
     },
     {
      "name": "preExecution",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "postExecution",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "postFetch",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "preChange",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "postChange",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "tooltip",
      "value": "",
      "type": "Html"
     }
    ]
   }
  ]
 },
 "datasources": {
  "rows": [
   {
    "id": "BISSOLTABLEDATAEDITOR_CPKENDPOINTS",
    "name": "BISSOLTABLEDATAEDITOR Endpoints",
    "type": "Label",
    "typeDesc": "<i>Group</i>",
    "parent": "UnIqEiD",
    "properties": [
     {
      "name": "Group",
      "value": "BISSOLTABLEDATAEDITOR Endpoints",
      "type": "Label"
     }
    ]
   },
   {
    "id": "fb523ae5-19d8-c344-dff8-db69803b3088",
    "type": "ComponentsbissolTableDataEditor_genericselectquery_CPKENDPOINT",
    "typeDesc": "genericselectquery Endpoint",
    "parent": "BISSOLTABLEDATAEDITOR_CPKENDPOINTS",
    "properties": [
     {
      "name": "name",
      "value": "qry_generic_select",
      "type": "Id"
     },
     {
      "name": "stepName",
      "value": "OUTPUT",
      "type": "String"
     },
     {
      "name": "kettleOutput",
      "value": "Inferred",
      "type": "kettleOutputCustom"
     }
    ],
    "meta": "CPK",
    "meta_pluginId": "bissolTableDataEditor",
    "meta_endpoint": "genericselectquery"
   },
   {
    "id": "71bed294-f5ca-6240-3ec8-5d2dda8e4bc8",
    "type": "ComponentsbissolTableDataEditor_genericupdatequery_CPKENDPOINT",
    "typeDesc": "genericupdatequery Endpoint",
    "parent": "BISSOLTABLEDATAEDITOR_CPKENDPOINTS",
    "properties": [
     {
      "name": "name",
      "value": "qry_generic_update",
      "type": "Id"
     },
     {
      "name": "stepName",
      "value": "OUTPUT",
      "type": "String"
     },
     {
      "name": "kettleOutput",
      "value": "Inferred",
      "type": "kettleOutputCustom"
     }
    ],
    "meta": "CPK",
    "meta_pluginId": "bissolTableDataEditor",
    "meta_endpoint": "genericupdatequery"
   }
  ]
 },
 "filename": "/system/bissolTableDataEditor/dashboards/main.cdfde"
}