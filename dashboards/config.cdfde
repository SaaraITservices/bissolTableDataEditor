{
 "layout": {
  "title": "config",
  "rows": [
   {
    "id": "04f6373b-4bbd-2d03-f841-242d75459c3b",
    "type": "LayoutResourceCode",
    "typeDesc": "Resource",
    "parent": "UnIqEiD",
    "properties": [
     {
      "name": "name",
      "value": "configcss",
      "type": "Id"
     },
     {
      "name": "resourceType",
      "value": "Css",
      "type": "Label"
     },
     {
      "name": "resourceCode",
      "value": ".bissolConfigBox{\n    position: relative;\n    top: 1em;\n} \n\n.bissolConfigSubmit{\n    width: 92%;\n    height: 92%;\n    margin: 4% 4% 4% 4%;\n} ",
      "type": "Resource"
     }
    ]
   },
   {
    "id": "7307cd80-7d92-4b9e-9be1-8c56320c71ad",
    "type": "LayoutResourceCode",
    "typeDesc": "Resource",
    "parent": "UnIqEiD",
    "properties": [
     {
      "name": "name",
      "value": "configjs",
      "type": "Id"
     },
     {
      "name": "resourceType",
      "value": "Javascript",
      "type": "Label"
     },
     {
      "name": "resourceCode",
      "value": "function bissolCreateSelect(myCdeContainerId, myDashboardObjectId, myLabelText, myData, cdeParam){\n    //document.getElementById('html_db_connection_picker').innerHTML = JSON.stringify(result_fetch_db_connections);\n    //var myData = result_fetch_db_connections;\n    //var myContainer = document.getElementById('html_db_connection_picker');\n        \n    var myContainer = document.getElementById(myCdeContainerId);\n    var myLabel = document.createElement('label');\n    var mySelect = document.createElement('select');\n    var myOption = document.createElement('option');\n    \n    var myLabelTextNode = document.createTextNode(myLabelText);\n    myLabel.setAttribute('for', myDashboardObjectId);\n    \n    mySelect.className = \"form-control\";\n    mySelect.id = myDashboardObjectId;\n    \n    // avoid having a default value preselected\n    var myDefaultOption = myOption.cloneNode();\n    myDefaultOption.setAttribute('disabled','');\n    myDefaultOption.setAttribute('selected','');\n    var myDefaultOptionText = document.createTextNode('Please select an option...'); \n    myDefaultOption.appendChild(myDefaultOptionText);\n    \n    console.log(myDashboardObjectId + \" with following values: \" + JSON.stringify(myData));\n    \n    // 1. Check if data is available\n    if(myData.length > 0){  \n        \n        //console.log(\"myDate has following length: \" + myData.length);\n          \n        mySelect.appendChild(myDefaultOption.cloneNode());\n        \n        for(var i = 0; i < myData.length; i++) {\n            var myValue = document.createTextNode(myData[i][0]);\n            mySelect.appendChild(myOption.cloneNode()).appendChild(myValue);\n        }\n        \n        // 2. Check if select exists - !! checks for a truthy value \n        // if it exists ...\n        if(!!document.getElementById(myDashboardObjectId)){\n            myContainer.replaceChild(mySelect,document.getElementById(myDashboardObjectId));\n            bissolEstablishSelectListener(myDashboardObjectId, cdeParam);\n            Dashboards.fireChange(cdeParam,null);\n        }\n        // if it doesnt exist ...\n        else {\n            myContainer.appendChild(myLabel.cloneNode()).appendChild(myLabelTextNode);\n            myContainer.appendChild(mySelect);\n            bissolEstablishSelectListener(myDashboardObjectId, cdeParam);\n        }\n    } \n    // if no data is available remove any existing selects\n    else {\n        //myContainer.removeChild(document.getElementById(myDashboardObjectId));\n        myContainer.innerHTML = '';\n        Dashboards.fireChange(cdeParam,null);\n    }   \n}\n\nfunction bissolPropagateSelectSelection(evt){\n    //console.log(evt);\n    //console.log('And the value is: ' + evt.target.selectedIndex);\n    //console.log('And the value is: ' + evt.target.options[evt.target.selectedIndex].text);\n    \n    // change the value of the cde parameter to the selected value\n    Dashboards.fireChange(evt.target.cdeParam, evt.target.options[evt.target.selectedIndex].text);\n    console.log('Setting parameter ' + evt.target.cdeParam + ' to: ' + evt.target.options[evt.target.selectedIndex].text);\n\n}\n\nfunction bissolEstablishSelectListener(myDashboardObjectId, cdeParam){\n    var select = document.getElementById(myDashboardObjectId);\n    // add arguments to pass on to event\n    //select.selectedText = select.options[select.selectedIndex].text; // dont set it here as the changes wont be picked up - set in function which the event listener calls\n    select.cdeParam = cdeParam;\n    //console.log('The selection for param ' + select.cdeParam + ' is: ' + select.selectedText);\n    select.addEventListener('change', bissolPropagateSelectSelection, false);\n    console.log('Adding event listener for id: ' + myDashboardObjectId);\n}\n\nfunction bissolRemoveSelectListeners(myDashboardObjectId){\n    var myDashboardObject = document.getElementById(myDashboardObjectId);\n    myDashboardObject.addEventListener('change', bissolPropagateSelectSelection, false);\n    console.log('Removing event listener for id: ' + myDashboardObjectId);\n}\n\n//---------------------- checkbox -----------------------//\n\nfunction bissolCreateCheckboxSet(myCdeContainerId, myDashboardObjectId, myLabelText, myData, cdeParam){\n    var myContainer = document.getElementById(myCdeContainerId);\n    var myLabel = document.createElement('label');\n    \n    // create main container which holds all the checkboxes\n    var myCheckboxSetContainer = document.createElement('div');\n    myCheckboxSetContainer.id = myDashboardObjectId;    \n    var myMainLabelTextNode = document.createTextNode(myLabelText);\n    myCheckboxSetContainer.appendChild(myLabel.cloneNode()).appendChild(myMainLabelTextNode);\n    \n    // create structure for one checkbox\n    var myCheckboxContainer = document.createElement('div');\n    myCheckboxContainer.className = 'checkbox';\n    var myCheckbox = document.createElement('input');   \n    myCheckbox.setAttribute('type','checkbox');\n\n    // 1. Check if data is available\n    if(myData.length > 0){  \n        \n        \n        for(var i = 0; i < myData.length; i++) \n        {\n            var myCheckboxLabel = document.createTextNode(myData[i][0]);\n            myCheckboxSetContainer.appendChild(myCheckboxContainer.cloneNode()).appendChild(myLabel.cloneNode()).appendChild(myCheckbox.cloneNode());\n            myCheckboxSetContainer.lastChild.lastChild.appendChild(myCheckboxLabel);\n            myCheckboxSetContainer.lastChild.lastChild.firstChild.setAttribute('name', cdeParam);\n            myCheckboxSetContainer.lastChild.lastChild.firstChild.setAttribute('value', myData[i][0]);\n        }\n        \n        // 2. Check if checkbox exists - !! checks for a truthy value \n        // if it exists ...\n        if(!!document.getElementById(myDashboardObjectId)){\n            myContainer.replaceChild(myCheckboxSetContainer,document.getElementById(myDashboardObjectId));\n            bissolEstablishCheckboxListener(myDashboardObjectId, cdeParam);\n            Dashboards.fireChange(cdeParam,null);\n        }\n        // if it doesnt exist ...\n        else {\n            myContainer.appendChild(myCheckboxSetContainer);\n            bissolEstablishCheckboxListener(myDashboardObjectId, cdeParam);\n        }\n    } \n    // if no data is available remove any existing selects\n    else {\n        //myContainer.removeChild(document.getElementById(myDashboardObjectId));\n        myContainer.innerHTML = '';\n    }\n} \n\n\n/**\nfunction bissolGetCheckboxSetValues(myCheckboxSetId, cdeParam)  \n{\n    var myCheckedValues = [];\n    var myCheckboxSetContainer = document.getElementById(myCheckboxSetId);\n    var checkboxes = myCheckboxSetContainer.getElementsByTagName('input');\n    for (var i = 0; i < checkboxes.length; i++)\n    {\n        if(checkboxes[i].checked)\n        {\n            //alert(checkboxes[i].getAttribute('value'));\n            myCheckedValues.push(checkboxes[i].getAttribute('value'));            \n        }\n    }\n    //console.log(JSON.stringify(myCheckedValues));\n    console.log('cdeParam set to: ' + cdeParam);\n\n    Dashboards.fireChange(cdeParam, JSON.stringify(myCheckedValues));\n} \n**/\n\n// new \n// - when a checkbox is ticked, add value to cde param array\n// - when a checkbox is unticked, remove value from cde param array\n// - once the cde param array has more than one value display the submit button otherwise not (remove it)\n\nfunction bissolPropagateCheckboxSelection(evt){\n    //console.log('Checkbox clicked ...');\n    //console.log(evt);\n    \n    var myCheckedValues = [];\n    \n    if(Dashboards.getParameterValue(evt.target.cdeParam) === ''){\n        //myCheckedValues = [];\n    } else {\n        myCheckedValues = Dashboards.getParameterValue(evt.target.cdeParam);    \n    }\n    \n    \n    if(evt.target.checked){\n        myCheckedValues.push(evt.target.value);\n        Dashboards.fireChange(evt.target.cdeParam,myCheckedValues);\n        console.log('Setting parameter ' + evt.target.cdeParam + ' to: ' + myCheckedValues);\n    } else {\n        // find element in array\n        var index = myCheckedValues.indexOf(evt.target.value);\n        // remove element from array\n        if (index > -1) {\n            myCheckedValues.splice(index, 1);\n        }\n        // fire change\n        Dashboards.fireChange(evt.target.cdeParam,myCheckedValues);\n        console.log('Setting parameter ' + evt.target.cdeParam + ' to: ' + myCheckedValues);\n    }\n}\n\nfunction bissolEstablishCheckboxListener(myDashboardObjectId, cdeParam){\n    var myDashboardObject = document.getElementById(myDashboardObjectId);\n    var checkboxes = myDashboardObject.getElementsByTagName('input');\n    // establish listener for each checkbox\n    for(var i = 0; i < checkboxes.length; i++){\n        var checkbox = checkboxes[i];\n        checkbox.cdeParam = cdeParam;\n        checkbox.addEventListener('change', bissolPropagateCheckboxSelection, false);\n        console.log('Adding event listener for id: ' + myDashboardObjectId +', checkbox: ' + i );        \n    }\n}\n\n// non generic submit button\n//<button type=\"submit\" class=\"btn btn-primary bissolConfigSubmit\" onclick=\"bissolGetCheckboxSetValues('dbColumnPicker','param_db_column')\">Submit</button>\n\n/**\nfunction bissolCreateConfigSubmitButton(){\n    var myContainer = document.getElementById('html_submit');\n    var myButton = document.createElement('button');\n    var myButtonText = document.createTextNode('Submit');\n    myButton.className = 'btn btn-primary bissolConfigSubmit';\n    myButton.setAttribute('type','submit');\n    myButton.setAttribute('onclick',\"bissolGetCheckboxSetValues('dbColumnPicker','param_db_column')\");\n    myButton.appendChild(myButtonText);\n    \n    //[OPEN] ONLY DISPLAY IF ALL PARAMETER VALUES ARE AVAILABLE\n    \n    // check if select already exists otherwise create   \n    var myExistingSubmit = document.getElementById('html_submit');\n    var myExistingButtons = myExistingSubmit.getElementsByTagName('button');\n    if(myExistingButtons == 'undefined' || myExistingButtons.length === 0){\n        myContainer.appendChild(myButton);\n    } \n    \n} \n**/\n\n// [OPEN] make bootstrap style dynamic, make button type dynamic\n/**\n * The idea is that the button only shows up when a given CDE parameter has a value.\n * Use a Freeform Component to listen to this CDE parameter and call bissolCreateButton()\n * in the Custom Script property\n **/\n \nfunction bissolCreateButton(myCdeContainerId, myLabelText, cdeParam){\n    console.log('Trying to create a button ...');\n    var myContainer = document.getElementById(myCdeContainerId);\n\n    var myButton = document.createElement('button');\n    var myButtonText = document.createTextNode(myLabelText);\n    myButton.className = 'btn btn-primary bissolConfigSubmit';\n    myButton.setAttribute('type','submit');\n    myButton.appendChild(myButtonText);\n    \n    // check if select already exists otherwise create   \n    var myExistingSubmit = document.getElementById(myCdeContainerId);\n    var myExistingButtons = myExistingSubmit.getElementsByTagName('button');\n    if(myExistingButtons == 'undefined' || myExistingButtons.length === 0){\n        myContainer.appendChild(myButton);\n    } \n\n}\n//bissolCreateButton('html_submit','Submit','');\n\n/**\nfunction bissolCreateButtonListener(myCdeContainerId, myLabelText, cdeParam, cdeParamToListenTo ){\n    var myDashboardObject = document.getElementById(myDashboardObjectId);\n    myDashboardObject.myCdeContainerId = myCdeContainerId;\n    myDashboardObject.myLabelText = myLabelText;\n    myDashboardObject.cdeParam = cdeParam;\n    myDashboardObject.addEventListener('change', bissolCreateButton, false);\n    if(Dashboards.getParameterValue(cdeParamToListenTo) === ''){\n}\n**/\n\n\n/**\nfunction bissolEstablishButtonListener(myDashboardObjectId, cdeParam){\n    var myDashboardObject = document.getElementById(myDashboardObjectId);\n    myDashboardObject.cdeParam = cdeParam;\n    myDashboardObject.addEventListener('change', bissolPropagateButtonSelection, false);            \n\n    console.log('Adding event listener for id: ' + myDashboardObjectId);    \n}\n**/\n ",
      "type": "Resource"
     }
    ]
   },
   {
    "id": "99682fbf-3b25-b955-dcb2-311e2be7c139",
    "type": "LayoutRow",
    "typeDesc": "Row",
    "parent": "UnIqEiD",
    "properties": [
     {
      "name": "name",
      "value": "",
      "type": "Id"
     },
     {
      "name": "height",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "backgroundColor",
      "value": "",
      "type": "Color"
     },
     {
      "name": "roundCorners",
      "value": "",
      "type": "RoundCorners"
     },
     {
      "name": "textAlign",
      "value": "",
      "type": "TextAlign"
     },
     {
      "name": "cssClass",
      "value": "",
      "type": "String"
     }
    ]
   },
   {
    "id": "1732bb87-859e-a727-4c08-35a39cf6c22a",
    "type": "LayoutColumn",
    "typeDesc": "Column",
    "parent": "99682fbf-3b25-b955-dcb2-311e2be7c139",
    "properties": [
     {
      "name": "name",
      "value": "",
      "type": "Id"
     },
     {
      "name": "columnSpan",
      "value": "4",
      "type": "Integer"
     },
     {
      "name": "columnPrepend",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "columnAppend",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "columnPrependTop",
      "value": "false",
      "type": "Boolean"
     },
     {
      "name": "columnAppendBottom",
      "value": "false",
      "type": "Boolean"
     },
     {
      "name": "columnBorder",
      "value": "false",
      "type": "Boolean"
     },
     {
      "name": "columnBigBorder",
      "value": "false",
      "type": "Boolean"
     },
     {
      "name": "height",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "backgroundColor",
      "value": "",
      "type": "Color"
     },
     {
      "name": "roundCorners",
      "value": "",
      "type": "RoundCorners"
     },
     {
      "name": "textAlign",
      "value": "",
      "type": "TextAlign"
     },
     {
      "name": "cssClass",
      "value": "",
      "type": "String"
     }
    ]
   },
   {
    "id": "c9920181-9115-cc60-38d3-45efd867a386",
    "type": "LayoutHtml",
    "typeDesc": "Html",
    "parent": "1732bb87-859e-a727-4c08-35a39cf6c22a",
    "properties": [
     {
      "name": "name",
      "value": "",
      "type": "Id"
     },
     {
      "name": "html",
      "value": "<div class=\"panel panel-default bissolConfigBox\">\n  <div class=\"panel-heading\">\n    <h3 class=\"panel-title\">Configuration</h3>\n  </div>\n  <div class=\"panel-body\">\n    <div id=\"html_db_connection_picker\"></div>\n    <div id=\"html_db_schema_picker\"></div>\n    <div id=\"html_db_table_picker\"></div>\n    <div id=\"html_db_column_picker\"></div>\n  </div>\n  <div id=\"html_submit\"></div>\n</div> ",
      "type": "Html"
     },
     {
      "name": "fontSize",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "color",
      "value": "",
      "type": "Color"
     },
     {
      "name": "cssClass",
      "value": "",
      "type": "String"
     }
    ]
   }
  ]
 },
 "components": {
  "rows": [
   {
    "id": "OTHERCOMPONENTS",
    "name": "Others",
    "type": "Label",
    "typeDesc": "<i>Group</i>",
    "parent": "UnIqEiD",
    "properties": [
     {
      "name": "Group",
      "value": "Others",
      "type": "Label"
     }
    ]
   },
   {
    "id": "fef9c001-4e78-3901-f642-ace691cfd8a4",
    "type": "ComponentsQuery",
    "typeDesc": "Query Component",
    "parent": "OTHERCOMPONENTS",
    "properties": [
     {
      "name": "name",
      "value": "comp_db_connection_picker",
      "type": "Id"
     },
     {
      "name": "listeners",
      "value": "[]",
      "type": "Listeners"
     },
     {
      "name": "parameters",
      "value": "[]",
      "type": "ValuesArray"
     },
     {
      "name": "resultvar",
      "value": "result_fetch_db_connections",
      "type": "Result"
     },
     {
      "name": "dataSource",
      "value": "qry_fetch_db_connections",
      "type": "Datasource"
     },
     {
      "name": "refreshPeriod",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "priority",
      "value": 5,
      "type": "Integer"
     },
     {
      "name": "htmlObject",
      "value": "",
      "type": "HtmlObject"
     },
     {
      "name": "executeAtStart",
      "value": "true",
      "type": "Boolean"
     },
     {
      "name": "preExecution",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "postExecution",
      "value": "function(){\n    //cdeBootstrapSelect('html_db_connection_picker', 'dbConnectionPicker', 'Choose Connection:', result_fetch_db_connections);\n    //establishListeners('dbConnectionPicker', 'param_db_connection');\n    bissolCreateSelect('html_db_connection_picker', 'dbConnectionPicker', 'Choose Connection:', result_fetch_db_connections, 'param_db_connection');\n}",
      "type": "JavaScript"
     },
     {
      "name": "postFetch",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "preChange",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "postChange",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "tooltip",
      "value": "",
      "type": "Html"
     }
    ]
   },
   {
    "id": "1c9825e0-81d9-6cc8-d3fc-54d00deb8ab1",
    "type": "ComponentsQuery",
    "typeDesc": "Query Component",
    "parent": "OTHERCOMPONENTS",
    "properties": [
     {
      "name": "name",
      "value": "comp_db_schema_picker",
      "type": "Id"
     },
     {
      "name": "listeners",
      "value": "['${p:param_db_connection}']",
      "type": "Listeners"
     },
     {
      "name": "parameters",
      "value": "[[\"param_db_connection\",\"param_db_connection\"]]",
      "type": "ValuesArray"
     },
     {
      "name": "resultvar",
      "value": "result_fetch_db_schemas",
      "type": "Result"
     },
     {
      "name": "dataSource",
      "value": "qry_fetch_db_schemas",
      "type": "Datasource"
     },
     {
      "name": "refreshPeriod",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "priority",
      "value": 5,
      "type": "Integer"
     },
     {
      "name": "htmlObject",
      "value": "",
      "type": "HtmlObject"
     },
     {
      "name": "executeAtStart",
      "value": "false",
      "type": "Boolean"
     },
     {
      "name": "preExecution",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "postExecution",
      "value": "function(){\n    bissolCreateSelect('html_db_schema_picker','dbSchemaPicker', 'Choose Schema:', result_fetch_db_schemas, 'param_db_schema');\n}",
      "type": "JavaScript"
     },
     {
      "name": "postFetch",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "preChange",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "postChange",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "tooltip",
      "value": "",
      "type": "Html"
     }
    ]
   },
   {
    "id": "896b05cb-a53c-4159-9fcb-eb23f9d0995f",
    "type": "ComponentsQuery",
    "typeDesc": "Query Component",
    "parent": "OTHERCOMPONENTS",
    "properties": [
     {
      "name": "name",
      "value": "comp_db_table_picker",
      "type": "Id"
     },
     {
      "name": "listeners",
      "value": "['${p:param_db_schema}']",
      "type": "Listeners"
     },
     {
      "name": "parameters",
      "value": "[[\"param_db_connection\",\"param_db_connection\"],[\"param_db_schema\",\"param_db_schema\"]]",
      "type": "ValuesArray"
     },
     {
      "name": "resultvar",
      "value": "result_fetch_db_tables",
      "type": "Result"
     },
     {
      "name": "dataSource",
      "value": "qry_fetch_db_tables",
      "type": "Datasource"
     },
     {
      "name": "refreshPeriod",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "priority",
      "value": 5,
      "type": "Integer"
     },
     {
      "name": "htmlObject",
      "value": "",
      "type": "HtmlObject"
     },
     {
      "name": "executeAtStart",
      "value": "false",
      "type": "Boolean"
     },
     {
      "name": "preExecution",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "postExecution",
      "value": "function(){\n    bissolCreateSelect('html_db_table_picker','dbTablePicker', 'Choose Table:', result_fetch_db_tables, 'param_db_table');\n}",
      "type": "JavaScript"
     },
     {
      "name": "postFetch",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "preChange",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "postChange",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "tooltip",
      "value": "",
      "type": "Html"
     }
    ]
   },
   {
    "id": "d1db5ef5-2858-cbd2-83d1-22056ba6dd62",
    "type": "ComponentsQuery",
    "typeDesc": "Query Component",
    "parent": "OTHERCOMPONENTS",
    "properties": [
     {
      "name": "name",
      "value": "comp_db_column_picker",
      "type": "Id"
     },
     {
      "name": "listeners",
      "value": "['${p:param_db_table}']",
      "type": "Listeners"
     },
     {
      "name": "parameters",
      "value": "[[\"param_db_connection\",\"param_db_connection\"],[\"param_db_schema\",\"param_db_schema\"],[\"param_db_table\",\"param_db_table\"]]",
      "type": "ValuesArray"
     },
     {
      "name": "resultvar",
      "value": "result_fetch_db_columns",
      "type": "Result"
     },
     {
      "name": "dataSource",
      "value": "qry_fetch_db_columns",
      "type": "Datasource"
     },
     {
      "name": "refreshPeriod",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "priority",
      "value": 5,
      "type": "Integer"
     },
     {
      "name": "htmlObject",
      "value": "",
      "type": "HtmlObject"
     },
     {
      "name": "executeAtStart",
      "value": "false",
      "type": "Boolean"
     },
     {
      "name": "preExecution",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "postExecution",
      "value": "function(){\n    bissolCreateCheckboxSet('html_db_column_picker','dbColumnPicker', 'Choose Columns:', result_fetch_db_columns, 'param_db_column');\n}",
      "type": "JavaScript"
     },
     {
      "name": "postFetch",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "preChange",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "postChange",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "tooltip",
      "value": "",
      "type": "Html"
     }
    ]
   },
   {
    "id": "faa8c03d-0800-3d9a-0f95-4ba29aba4b90",
    "type": "ComponentsQuery",
    "typeDesc": "Query Component",
    "parent": "OTHERCOMPONENTS",
    "properties": [
     {
      "name": "name",
      "value": "comp_save_config",
      "type": "Id"
     },
     {
      "name": "listeners",
      "value": "[]",
      "type": "Listeners"
     },
     {
      "name": "parameters",
      "value": "[[\"param_db_connection\",\"param_db_connection\"],[\"param_db_schema\",\"param_db_schema\"],[\"param_db_table\",\"param_db_table\"],[\"param_db_column\",\"param_db_column\"]]",
      "type": "ValuesArray"
     },
     {
      "name": "resultvar",
      "value": "",
      "type": "Result"
     },
     {
      "name": "dataSource",
      "value": "qry_save_config",
      "type": "Datasource"
     },
     {
      "name": "refreshPeriod",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "priority",
      "value": 5,
      "type": "Integer"
     },
     {
      "name": "htmlObject",
      "value": "",
      "type": "HtmlObject"
     },
     {
      "name": "executeAtStart",
      "value": "false",
      "type": "Boolean"
     },
     {
      "name": "preExecution",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "postExecution",
      "value": "console.log(\"Saving configuration details\");",
      "type": "JavaScript"
     },
     {
      "name": "postFetch",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "preChange",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "postChange",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "tooltip",
      "value": "",
      "type": "Html"
     }
    ]
   },
   {
    "id": "dc446f30-ae9a-fd5a-25c8-0f6cd675b9a1",
    "type": "Componentsfreeform",
    "typeDesc": "Freeform Component",
    "parent": "OTHERCOMPONENTS",
    "properties": [
     {
      "name": "name",
      "value": "comp_create_button_listener",
      "type": "Id"
     },
     {
      "name": "listeners",
      "value": "['${p:param_db_column}']",
      "type": "Listeners"
     },
     {
      "name": "parameters",
      "value": "[]",
      "type": "ValuesArray"
     },
     {
      "name": "customfunction",
      "value": "function(){\n    bissolCreateButton('html_submit','Submit','');\n}",
      "type": "JavaScript"
     },
     {
      "name": "manageCallee",
      "value": "true",
      "type": "Boolean"
     },
     {
      "name": "dataSource",
      "value": "",
      "type": "Datasource"
     },
     {
      "name": "width",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "priority",
      "value": 5,
      "type": "Integer"
     },
     {
      "name": "height",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "htmlObject",
      "value": "",
      "type": "HtmlObject"
     },
     {
      "name": "executeAtStart",
      "value": "false",
      "type": "Boolean"
     },
     {
      "name": "preExecution",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "postFetch",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "postExecution",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "preChange",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "postChange",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "tooltip",
      "value": "",
      "type": "Html"
     }
    ]
   },
   {
    "id": "GENERIC",
    "name": "Generic",
    "type": "Label",
    "typeDesc": "<i>Group</i>",
    "parent": "UnIqEiD",
    "properties": [
     {
      "name": "Group",
      "value": "Generic",
      "type": "Label"
     }
    ]
   },
   {
    "id": "56f1fab1-2c4e-b174-754e-4608e1bd0723",
    "type": "ComponentsParameter",
    "typeDesc": "Simple parameter",
    "parent": "GENERIC",
    "properties": [
     {
      "name": "name",
      "value": "param_db_connection",
      "type": "Id"
     },
     {
      "name": "propertyValue",
      "value": "",
      "type": "String"
     },
     {
      "name": "parameterViewRole",
      "value": "unused",
      "type": "parameterViewRoleCustom"
     },
     {
      "name": "bookmarkable",
      "value": "false",
      "type": "Boolean"
     }
    ]
   },
   {
    "id": "a8c5cf6a-2c38-830d-4f41-332b66649628",
    "type": "ComponentsParameter",
    "typeDesc": "Simple parameter",
    "parent": "GENERIC",
    "properties": [
     {
      "name": "name",
      "value": "param_db_schema",
      "type": "Id"
     },
     {
      "name": "propertyValue",
      "value": "",
      "type": "String"
     },
     {
      "name": "parameterViewRole",
      "value": "unused",
      "type": "parameterViewRoleCustom"
     },
     {
      "name": "bookmarkable",
      "value": "false",
      "type": "Boolean"
     }
    ]
   },
   {
    "id": "7223fea1-41d3-bcf2-c80c-553a98c17fe4",
    "type": "ComponentsParameter",
    "typeDesc": "Simple parameter",
    "parent": "GENERIC",
    "properties": [
     {
      "name": "name",
      "value": "param_db_table",
      "type": "Id"
     },
     {
      "name": "propertyValue",
      "value": "",
      "type": "String"
     },
     {
      "name": "parameterViewRole",
      "value": "unused",
      "type": "parameterViewRoleCustom"
     },
     {
      "name": "bookmarkable",
      "value": "false",
      "type": "Boolean"
     }
    ]
   },
   {
    "id": "e762dc42-0385-75cf-0d6a-9c03f5e0755f",
    "type": "ComponentsParameter",
    "typeDesc": "Simple parameter",
    "parent": "GENERIC",
    "properties": [
     {
      "name": "name",
      "value": "param_db_column",
      "type": "Id"
     },
     {
      "name": "propertyValue",
      "value": "",
      "type": "String"
     },
     {
      "name": "parameterViewRole",
      "value": "unused",
      "type": "parameterViewRoleCustom"
     },
     {
      "name": "bookmarkable",
      "value": "false",
      "type": "Boolean"
     }
    ]
   }
  ]
 },
 "datasources": {
  "rows": [
   {
    "id": "SQL",
    "name": "SQL Queries",
    "type": "Label",
    "typeDesc": "<i>Group</i>",
    "parent": "UnIqEiD",
    "properties": [
     {
      "name": "Group",
      "value": "SQL Queries",
      "type": "Label"
     }
    ]
   },
   {
    "id": "0a56c773-c21a-33cb-c9aa-716d1c31731a",
    "type": "Componentssql_sqlJndi",
    "typeDesc": "sql over sqlJndi",
    "meta": "CDA",
    "meta_conntype": "sql.jndi",
    "meta_datype": "sql",
    "parent": "SQL",
    "properties": [
     {
      "name": "name",
      "value": "dummy",
      "type": "Id"
     },
     {
      "name": "access",
      "value": "public",
      "type": "Access"
     },
     {
      "name": "jndi",
      "value": "",
      "type": "Jndi"
     },
     {
      "name": "query",
      "value": "",
      "type": "SqlQuery"
     },
     {
      "name": "parameters",
      "value": "[]",
      "type": "CdaParameters"
     },
     {
      "name": "output",
      "value": "[]",
      "type": "IndexArray"
     },
     {
      "name": "outputMode",
      "value": "include",
      "type": "OutputMode"
     },
     {
      "name": "cdacolumns",
      "value": "[]",
      "type": "CdaColumnsArray"
     },
     {
      "name": "cdacalculatedcolumns",
      "value": "[]",
      "type": "CdaCalculatedColumnsArray"
     },
     {
      "name": "cacheDuration",
      "value": 3600,
      "type": "Integer"
     },
     {
      "name": "cache",
      "value": "true",
      "type": "Boolean"
     }
    ]
   },
   {
    "id": "BISSOLTABLEDATAEDITOR_CPKENDPOINTS",
    "name": "BISSOLTABLEDATAEDITOR Endpoints",
    "type": "Label",
    "typeDesc": "<i>Group</i>",
    "parent": "UnIqEiD",
    "properties": [
     {
      "name": "Group",
      "value": "BISSOLTABLEDATAEDITOR Endpoints",
      "type": "Label"
     }
    ]
   },
   {
    "id": "419ed39b-3d06-0446-198a-f47bc6b9df43",
    "type": "ComponentsbissolTableDataEditor_fetchDBConnections_CPKENDPOINT",
    "typeDesc": "fetchDBConnections Endpoint",
    "parent": "BISSOLTABLEDATAEDITOR_CPKENDPOINTS",
    "properties": [
     {
      "name": "name",
      "value": "qry_fetch_db_connections",
      "type": "Id"
     },
     {
      "name": "stepName",
      "value": "OUTPUT",
      "type": "String"
     },
     {
      "name": "kettleOutput",
      "value": "Inferred",
      "type": "kettleOutputCustom"
     }
    ],
    "meta": "CPK",
    "meta_pluginId": "bissolTableDataEditor",
    "meta_endpoint": "fetchDBConnections"
   },
   {
    "id": "464b80c3-f27c-68e2-af3e-b5bc311874c4",
    "type": "ComponentsbissolTableDataEditor_fetchdbschemas_CPKENDPOINT",
    "typeDesc": "fetchdbschemas Endpoint",
    "parent": "BISSOLTABLEDATAEDITOR_CPKENDPOINTS",
    "properties": [
     {
      "name": "name",
      "value": "qry_fetch_db_schemas",
      "type": "Id"
     },
     {
      "name": "stepName",
      "value": "OUTPUT",
      "type": "String"
     },
     {
      "name": "kettleOutput",
      "value": "Inferred",
      "type": "kettleOutputCustom"
     }
    ],
    "meta": "CPK",
    "meta_pluginId": "bissolTableDataEditor",
    "meta_endpoint": "fetchdbschemas"
   },
   {
    "id": "f5942c1a-3053-60bf-aed8-42d178f1bcf2",
    "type": "ComponentsbissolTableDataEditor_fetchdbtables_CPKENDPOINT",
    "typeDesc": "fetchdbtables Endpoint",
    "parent": "BISSOLTABLEDATAEDITOR_CPKENDPOINTS",
    "properties": [
     {
      "name": "name",
      "value": "qry_fetch_db_tables",
      "type": "Id"
     },
     {
      "name": "stepName",
      "value": "OUTPUT",
      "type": "String"
     },
     {
      "name": "kettleOutput",
      "value": "Inferred",
      "type": "kettleOutputCustom"
     }
    ],
    "meta": "CPK",
    "meta_pluginId": "bissolTableDataEditor",
    "meta_endpoint": "fetchdbtables"
   },
   {
    "id": "5c75bf19-7140-de88-291b-4e47655d4910",
    "type": "ComponentsbissolTableDataEditor_fetchdbcolumns_CPKENDPOINT",
    "typeDesc": "fetchdbcolumns Endpoint",
    "parent": "BISSOLTABLEDATAEDITOR_CPKENDPOINTS",
    "properties": [
     {
      "name": "name",
      "value": "qry_fetch_db_columns",
      "type": "Id"
     },
     {
      "name": "stepName",
      "value": "OUTPUT",
      "type": "String"
     },
     {
      "name": "kettleOutput",
      "value": "Inferred",
      "type": "kettleOutputCustom"
     }
    ],
    "meta": "CPK",
    "meta_pluginId": "bissolTableDataEditor",
    "meta_endpoint": "fetchdbcolumns"
   },
   {
    "id": "4921e733-d3b6-f26c-09f3-6dabfd916984",
    "type": "ComponentsbissolTableDataEditor_saveconfig_CPKENDPOINT",
    "typeDesc": "saveconfig Endpoint",
    "parent": "BISSOLTABLEDATAEDITOR_CPKENDPOINTS",
    "properties": [
     {
      "name": "name",
      "value": "qry_save_config",
      "type": "Id"
     },
     {
      "name": "stepName",
      "value": "OUTPUT",
      "type": "String"
     },
     {
      "name": "kettleOutput",
      "value": "Inferred",
      "type": "kettleOutputCustom"
     }
    ],
    "meta": "CPK",
    "meta_pluginId": "bissolTableDataEditor",
    "meta_endpoint": "saveconfig"
   }
  ]
 },
 "filename": "/system/bissolTableDataEditor/dashboards/config.cdfde"
}