{
 "layout": {
  "title": "info",
  "rows": [
   {
    "id": "80f35519-516d-2d07-175b-2309cbecc230",
    "type": "LayoutRow",
    "typeDesc": "Row",
    "parent": "UnIqEiD",
    "properties": [
     {
      "name": "name",
      "value": "",
      "type": "Id"
     },
     {
      "name": "height",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "backgroundColor",
      "value": "",
      "type": "Color"
     },
     {
      "name": "roundCorners",
      "value": "",
      "type": "RoundCorners"
     },
     {
      "name": "textAlign",
      "value": "",
      "type": "TextAlign"
     },
     {
      "name": "cssClass",
      "value": "",
      "type": "String"
     }
    ]
   },
   {
    "id": "4641cf03-58b9-26d1-c4ee-ab0001e84096",
    "type": "LayoutBootstrapColumn",
    "typeDesc": "Column",
    "parent": "80f35519-516d-2d07-175b-2309cbecc230",
    "properties": [
     {
      "name": "name",
      "value": "Info",
      "type": "Id"
     },
     {
      "name": "bootstrapExtraSmall",
      "value": "",
      "type": "String"
     },
     {
      "name": "bootstrapSmall",
      "value": "",
      "type": "String"
     },
     {
      "name": "bootstrapMedium",
      "value": "",
      "type": "String"
     },
     {
      "name": "bootstrapLarge",
      "value": "12",
      "type": "String"
     },
     {
      "name": "bootstrapCssClass",
      "value": "panel panel-default",
      "type": "String"
     },
     {
      "name": "height",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "backgroundColor",
      "value": "",
      "type": "Color"
     },
     {
      "name": "roundCorners",
      "value": "",
      "type": "RoundCorners"
     },
     {
      "name": "textAlign",
      "value": "",
      "type": "TextAlign"
     },
     {
      "name": "cssClass",
      "value": "",
      "type": "String"
     }
    ]
   },
   {
    "id": "9995a745-aef7-fb3a-77c2-748ead329e71",
    "type": "LayoutHtml",
    "typeDesc": "Html",
    "parent": "4641cf03-58b9-26d1-c4ee-ab0001e84096",
    "properties": [
     {
      "name": "name",
      "value": "",
      "type": "Id"
     },
     {
      "name": "html",
      "value": "<h1 id=\"toc_0\">Bissol Table Data Editor</h1>\n\n<blockquote>\n<p><strong>WARNING</strong>: Do not use in production! This project is in its early stages. Functionality has only been tested with PostgreSQL and MariaDB/MySQL.</p>\n\n<p><strong>NOTE</strong>: <strong>AFTER INSTALLING THE PLUGIN YOU MUST RESTART THE BISERVER</strong> so that the Kettle plugins get registered.</p>\n</blockquote>\n\n<h2 id=\"toc_2\">Intended Purpose of the Plugin</h2>\n\n<p>The <strong>Bissol Table Data Editor</strong> (BTDE) Pentaho BI Server Plugin allows you to <strong>update</strong> and <strong>add</strong> data to <strong>small database tables</strong> via an easy-to-use web-interface.</p>\n\n<p>Example <strong>Use Cases</strong>:</p>\n\n<ul>\n<li>Maintaining attribute fields in <strong>dimension tables</strong>. For some dimensions in a star schema you might ask end-users to add some additional information which is otherwise not available.</li>\n<li>Maintaining custom <strong>configuration tables</strong></li>\n<li>Maintaining custom <strong>metadata tables</strong></li>\n</ul>\n\n<blockquote>\n<p><strong>Note</strong>: The <strong>emphasis</strong> is on maintaining <strong>small tables</strong>. The definition of <strong>small</strong> is anything that fits on a standard screen, so ideally less than a hundred records. As a safety measure, the BTDE limits the amount of data which can be displayed to 500 records.</p>\n</blockquote>\n\n<h2 id=\"toc_3\">Additional Requirements for Installation</h2>\n\n<h3 id=\"toc_4\">BI / BA Server</h3>\n\n<p>This plugin will only work on biserver v5.2. with the latest version of the C*Tools installed.\nMake sure you have at last one <strong>data source</strong> defined with a user which has <strong>read and write</strong> rights on the specific database.</p>\n\n<h3 id=\"toc_5\">Kettle (PDI) Plugins</h3>\n\n<p>Currently <strong>Sparkl</strong> does&#39;t automatically include dependent PDI plugins. I have implemented a workaround so that these Kettle plugins get automatically installed on the first startup, after which you have to restart the biserver.</p>\n\n<p>Following <strong>Kettle</strong> plugins will be automatically added to the <code>pentaho-solutions/system/kettle/plugins/steps</code> folder.</p>\n\n<ul>\n<li><a href=\"https://github.com/webdetails/kettle-baserver-utils\">BA Server Utils</a></li>\n<li><a href=\"https://github.com/rpbouman/pentaho-pdi-plugin-jdbc-metadata/wiki/Installation\">JDBC Metadata</a></li>\n</ul>\n\n<h3 id=\"toc_6\">JDBC Driver</h3>\n\n<p>The respective JDBC drivers have to be installed in <code>tomcat/lib</code>. This should already be the case if you defined <strong>data sources</strong> on the Pentaho BA Server.</p>\n\n<h2 id=\"toc_7\">Current Limitations</h2>\n\n<ul>\n<li>Only current web browsers are supported. The main editor page makes use of the <em>contenteditable</em> attribute which is only supported by recent web browsers.</li>\n<li>Only one columns is supported for the <strong>primary key</strong>. The primary key has to be defined for the update logic. Note that the primary key has to be properly defined with auto increment on the database side for this to work. New: Also non auto-incremented primary keys are supported.</li>\n<li>If there is a DB error while adding, updating or removing records, only a generic error is shown in the web UI. This has to do with the fact that currently PDI DB steps do not feed back any DB error message details. A Jira case has been created for this feature to be implemented.</li>\n</ul>\n\n<h2 id=\"toc_8\">General Workflow</h2>\n\n<p>Once the plugin is installed a user of the role admin can select tables via the <strong>Admin</strong> page and choose which columns of a DB table can be viewed and edited. Only then a standard end user can edit the data of a specific table via the <strong>Main</strong> page.</p>\n\n<h2 id=\"toc_9\">Configuration</h2>\n\n<p>Administrators can enter the config information for each table via a dedicated <strong>Admin</strong> page in the <strong>Pentaho User Console</strong>. There is full support for adding, editing and deleting configuration entries. The configuration entries are stored in the <code>bissolTableDataEditorConfig.json</code> file on the server in following directory:</p>\n\n<p><code>pentaho-solutions/system/bissolTableDataEditorConfig</code></p>\n\n<h3 id=\"toc_10\">Different Editor Modes</h3>\n\n<p>The latest version supports two editor modes: <strong>simple</strong> and <strong>complex</strong>.</p>\n\n<p>The <strong>simple editor</strong> supports inline table date editing. However, it doesn&#39;t support any of the following options:</p>\n\n<ul>\n<li>pagination</li>\n<li>search</li>\n<li>validation</li>\n<li>input helpers (date picker etc)</li>\n</ul>\n\n<h3 id=\"toc_11\">Validation</h3>\n\n<p>Validation is only support in the <strong>complex editor</strong>. In the configuration you have to specify values for the <code>inputTye</code>, <code>validationPattern</code> and <code>validationMessage</code>.</p>\n\n<p>The <code>validationPattern</code> is accepts a <strong>regular expression</strong> like e.g. <code>^[a-zA-Z]{1,35}$</code>. Please test your regular expression beforehand.</p>\n\n<blockquote>\n<p>Note: Fields of type date, datetime and time get validated automatically in complex editor mode, so do not specify any <code>validationPattern</code> for them. </p>\n</blockquote>\n\n<h3 id=\"toc_12\">How the configuration is saved to JSON</h3>\n\n<p>The structure of the JSON object looks like this:</p>\n\n<pre><code class=\"language-javascript\">[\n    {\n    &quot;configId&quot;: &quot;76618e1a-d23b-4ae6-830e-601d509ec4e7&quot;\n  , &quot;dbConnection&quot;: &quot;psqllocaltest&quot;\n  , &quot;dbSchema&quot;: &quot;public&quot;\n  , &quot;dbTable&quot;: &quot;employees&quot;\n  , &quot;editorType&quot;: &quot;complex&quot;\n  , &quot;metadata&quot;: [\n      {\n        &quot;colIndex&quot;: &quot;1&quot;\n      , &quot;colName&quot;: &quot;employee_id&quot;\n      , &quot;colTypeDb&quot;: &quot;serial&quot;\n      , &quot;colType&quot;: &quot;Integer&quot;\n      , &quot;isVisible&quot;: true\n      , &quot;isEditable&quot;: false\n      , &quot;isPrimaryKey&quot;: true\n      , &quot;isAutoIncrement&quot;: true\n      , &quot;defaultValue&quot;: &quot;&quot;\n      , &quot;isRequired&quot;: true\n      , &quot;validationPattern&quot;: &quot;&quot;\n      , &quot;validationMessage&quot;: &quot;&quot;\n      , &quot;inputType&quot;: &quot;none&quot;\n      , &quot;colFormat&quot;: &quot;&quot;\n      }\n    , {\n        &quot;colIndex&quot;: &quot;2&quot;\n      , &quot;colName&quot;: &quot;firstname&quot;\n      , &quot;colTypeDb&quot;: &quot;varchar&quot;\n      , &quot;colType&quot;: &quot;String&quot;\n      , &quot;isVisible&quot;: true\n      , &quot;isEditable&quot;: true\n      , &quot;isPrimaryKey&quot;: false\n      , &quot;isAutoIncrement&quot;: false\n      , &quot;defaultValue&quot;: &quot;Frank&quot;\n      , &quot;isRequired&quot;: true\n      , &quot;validationPattern&quot;: &quot;^[a-zA-Z]{1,35}$&quot;\n      , &quot;validationMessage&quot;: &quot;Has to be a string&quot;\n      , &quot;inputType&quot;: &quot;text&quot;\n      , &quot;colFormat&quot;: &quot;&quot;\n      }\n    , {\n        &quot;colIndex&quot;: &quot;3&quot;\n      , &quot;colName&quot;: &quot;lastname&quot;\n      , &quot;colTypeDb&quot;: &quot;varchar&quot;\n      , &quot;colType&quot;: &quot;String&quot;\n      , &quot;isVisible&quot;: true\n      , &quot;isEditable&quot;: true\n      , &quot;isPrimaryKey&quot;: false\n      , &quot;isAutoIncrement&quot;: false\n      , &quot;defaultValue&quot;: &quot;&quot;\n      , &quot;isRequired&quot;: false\n      , &quot;validationPattern&quot;: &quot;&quot;\n      , &quot;validationMessage&quot;: &quot;&quot;\n      , &quot;inputType&quot;: &quot;none&quot;\n      , &quot;colFormat&quot;: &quot;&quot;\n      }\n    , {\n        &quot;colIndex&quot;: &quot;4&quot;\n      , &quot;colName&quot;: &quot;start_date&quot;\n      , &quot;colTypeDb&quot;: &quot;date&quot;\n      , &quot;colType&quot;: &quot;Date&quot;\n      , &quot;isVisible&quot;: true\n      , &quot;isEditable&quot;: true\n      , &quot;isPrimaryKey&quot;: false\n      , &quot;isAutoIncrement&quot;: false\n      , &quot;defaultValue&quot;: &quot;&quot;\n      , &quot;isRequired&quot;: true\n      , &quot;validationPattern&quot;: &quot;&quot;\n      , &quot;validationMessage&quot;: &quot;&quot;\n      , &quot;inputType&quot;: &quot;date&quot;\n      , &quot;colFormat&quot;: &quot;yyyy-MM-dd&quot;\n      }\n    , {\n        &quot;colIndex&quot;: &quot;5&quot;\n      , &quot;colName&quot;: &quot;last_checkin&quot;\n      , &quot;colTypeDb&quot;: &quot;timestamp&quot;\n      , &quot;colType&quot;: &quot;Date&quot;\n      , &quot;isVisible&quot;: true\n      , &quot;isEditable&quot;: true\n      , &quot;isPrimaryKey&quot;: false\n      , &quot;isAutoIncrement&quot;: false\n      , &quot;defaultValue&quot;: &quot;&quot;\n      , &quot;isRequired&quot;: false\n      , &quot;validationPattern&quot;: &quot;&quot;\n      , &quot;validationMessage&quot;: &quot;&quot;\n      , &quot;inputType&quot;: &quot;datetime&quot;\n      , &quot;colFormat&quot;: &quot;yyyy-MM-dd HH:mm:ss&quot;\n      }\n    , {\n        &quot;colIndex&quot;: &quot;6&quot;\n      , &quot;colName&quot;: &quot;daily_break_time&quot;\n      , &quot;colTypeDb&quot;: &quot;time&quot;\n      , &quot;colType&quot;: &quot;Date&quot;\n      , &quot;isVisible&quot;: true\n      , &quot;isEditable&quot;: true\n      , &quot;isPrimaryKey&quot;: false\n      , &quot;isAutoIncrement&quot;: false\n      , &quot;defaultValue&quot;: &quot;&quot;\n      , &quot;isRequired&quot;: false\n      , &quot;validationPattern&quot;: &quot;&quot;\n      , &quot;validationMessage&quot;: &quot;&quot;\n      , &quot;inputType&quot;: &quot;time&quot;\n      , &quot;colFormat&quot;: &quot;HH:mm:ss&quot;\n      }\n    ]\n  }\n]\n</code></pre>\n\n<p>The file structure is pretty self-explanatory, hence I assume that you will find it easy to amend it. You should not have to edit this file manually.</p>\n\n<h3 id=\"toc_13\">Explicit labeling of column config entries</h3>\n\n<p>If you <strong>edit</strong> a configuration entry (configuration for one table) the columns will be listed on the <strong>Admin page</strong>. Columns details that are already stored in the configuration file are labelled <strong>Configured</strong> whereas other ones are labelled <strong>New</strong>. This is especially useful when the table definition changes on the database side.</p>\n ",
      "type": "Html"
     },
     {
      "name": "fontSize",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "color",
      "value": "",
      "type": "Color"
     },
     {
      "name": "cssClass",
      "value": "",
      "type": "String"
     }
    ]
   }
  ]
 },
 "components": {
  "rows": []
 },
 "datasources": {
  "rows": [
   {
    "id": "SQL",
    "name": "SQL Queries",
    "type": "Label",
    "typeDesc": "<i>Group</i>",
    "parent": "UnIqEiD",
    "properties": [
     {
      "name": "Group",
      "value": "SQL Queries",
      "type": "Label"
     }
    ]
   },
   {
    "id": "0a56c773-c21a-33cb-c9aa-716d1c31731a",
    "type": "Componentssql_sqlJndi",
    "typeDesc": "sql over sqlJndi",
    "meta": "CDA",
    "meta_conntype": "sql.jndi",
    "meta_datype": "sql",
    "parent": "SQL",
    "properties": [
     {
      "name": "name",
      "value": "dummy",
      "type": "Id"
     },
     {
      "name": "access",
      "value": "public",
      "type": "Access"
     },
     {
      "name": "jndi",
      "value": "",
      "type": "Jndi"
     },
     {
      "name": "query",
      "value": "",
      "type": "SqlQuery"
     },
     {
      "name": "parameters",
      "value": "[]",
      "type": "CdaParameters"
     },
     {
      "name": "output",
      "value": "[]",
      "type": "IndexArray"
     },
     {
      "name": "outputMode",
      "value": "include",
      "type": "OutputMode"
     },
     {
      "name": "cdacolumns",
      "value": "[]",
      "type": "CdaColumnsArray"
     },
     {
      "name": "cdacalculatedcolumns",
      "value": "[]",
      "type": "CdaCalculatedColumnsArray"
     },
     {
      "name": "cacheDuration",
      "value": 3600,
      "type": "Integer"
     },
     {
      "name": "cache",
      "value": "true",
      "type": "Boolean"
     }
    ]
   }
  ]
 },
 "filename": "/system/bissolTableDataEditor/dashboards/info.cdfde"
}